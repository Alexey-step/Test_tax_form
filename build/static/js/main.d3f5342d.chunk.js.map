{"version":3,"sources":["components/button/button.tsx","common.ts","const.ts","components/form-checkbox/form-checkbox.tsx","components/form/form.tsx","components/app/App.tsx","index.tsx"],"names":["Button","onButtonClick","className","onClick","getAllTaxes","item","taxes","maxTaxFree","tax","Math","floor","Number","getTaxFree","push","getEnding","ending","FormCheckbox","value","map","i","itemNumber","type","Form","useState","setValue","error","setError","setTaxes","onSubmit","evt","preventDefault","htmlFor","onChange","currentTarget","name","id","placeholder","required","length","defaultChecked","data-testid","disabled","App","isOpen","setIsOpen","handleButton","useEffect","onKeyDownEsc","key","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d3f5342d.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./button.scss\";\n\nexport type ButtonProps = {\n  onButtonClick: (isOpen: boolean) => void\n}\n\nconst Button: React.FC<ButtonProps> = ({onButtonClick}) => {\n  return (\n    <div className=\"button-wrapper\">\n      <button className=\"button\" onClick={() => onButtonClick(true)}>\n        Налоговый вычет\n      </button>\n    </div>\n  )\n}\n\nexport default Button;\n","import {MONTH, TAX, MAX_TAX_FREE} from \"./const\";\n\nexport const getTaxFree = (item: string): number => {\n  return Math.floor((Number(item) * MONTH) * TAX)\n}\n\nexport const getAllTaxes = (item: string) => {\n  let taxes = [];\n  let maxTaxFree = MAX_TAX_FREE;\n  const tax = getTaxFree(item)\n\n  while (maxTaxFree > 0) {\n    if (maxTaxFree > 0 && maxTaxFree < tax) {\n      taxes.push(maxTaxFree);\n      maxTaxFree = 0;\n    } else {\n      taxes.push(tax);\n      maxTaxFree = maxTaxFree - tax;\n    }\n  }\n  return taxes;\n}\n\nexport const getEnding = (item: number): string => {\n  let ending = `ый`;\n  if (item === 3) {\n    ending = `ий`;\n  } else if (item === 2 || item === 6 || item === 7 || item === 8) {\n    ending = `ой`\n  }\n  return ending;\n}\n","const MONTH: number = 12;\nconst TAX: number = 0.13;\nconst MAX_TAX_FREE: number = 260000;\n\nexport {\n  MONTH,\n  TAX,\n  MAX_TAX_FREE\n}\n","import React from \"react\";\nimport {getEnding} from \"../../common\";\nimport \"./form-checkbox.scss\";\n\ntype FormCheckboxProps = {\n  value: Array<number>;\n}\n\nconst FormCheckbox: React.FC<FormCheckboxProps> = ({value}) => {\n\n\n  return (\n    <div className=\"form__checkbox checkbox\">\n          <p className=\"checkbox__text\">Итого можете внести в качестве досрочных:</p>\n          {\n            value.map((item, i) => {\n              const itemNumber = i + 1;\n              return <label className=\"checkbox__label\" key={item + i}>\n              <input className=\"checkbox__input\" type=\"checkbox\"/>\n              <span className=\"checkbox__check\"></span>\n              {item} рублей\n              <span> в {itemNumber}-{getEnding(itemNumber)} год</span>\n            </label>\n            }\n            )\n          }\n        </div>\n  )\n}\n\nexport default FormCheckbox;\n","import React, {useState} from \"react\";\nimport FormCheckbox from \"../form-checkbox/form-checkbox\";\nimport {getAllTaxes} from \"../../common\";\nimport \"./form.scss\";\n\ntype FormProps = {\n  onButtonClick: (isOpen: boolean) => void\n}\n\nconst Form: React.FC<FormProps> = ({onButtonClick}) => {\n  const  [value, setValue] = useState<string>(``);\n  const [error, setError] = useState<boolean>(false);\n  const [taxes, setTaxes] = useState<number[]>([]);\n\n  const handleSubmit = (evt: React.SyntheticEvent): void => {\n    evt.preventDefault();\n    setValue(``);\n    setTaxes([]);\n  }\n\n  const handleChange = (evt: React.FormEvent<HTMLInputElement>): void => {\n    evt.preventDefault();\n    setValue(evt.currentTarget.value);\n    if (!Number(evt.currentTarget.value)) {\n      setError(true);\n    } else {\n      setError(false)\n    }\n  }\n\n  const handlePayment = () => {\n    if (value) {\n      setTaxes(getAllTaxes(value))\n    }\n  }\n\n  return (\n      <form\n        className=\"form\"\n        onSubmit={handleSubmit}\n      >\n        <h2 className=\"form__title\">Налоговый вычет</h2>\n        <p className=\"form__text\">\n          Используйте налоговый вычет чтобы погасить ипотеку\n          досрочно. Размер налогового вычета\n          составляет не более 13% от своего официального\n          годового дохода.\n        </p>\n        <label className=\"form__label\" htmlFor=\"text\">Ваша зарплата в месяц</label>\n        <input\n          onChange={handleChange}\n          className={`form__field ${error && `form__field--error`}`}\n          type=\"text\"\n          name=\"\"\n          id=\"text\"\n          placeholder=\"Введите данные\"\n          required\n          value={value}\n        />\n        <button\n          className=\"form__calc-btn\"\n          type=\"button\"\n          onClick={handlePayment}\n        >\n          Расчитать\n        </button>\n        {\n          taxes.length > 0 ? <FormCheckbox value={taxes}/> : ``\n        }\n        <div className=\"form__group radio\">\n          <p className=\"radio__text\">Что уменьшаем?</p>\n          <div className=\"radio__wrapper\">\n            <input className=\"radio__input\" type=\"radio\" name=\"button\" id=\"payment\" defaultChecked={true}/>\n            <label className=\"radio__label\" htmlFor=\"payment\">Платеж</label>\n            <input className=\"radio__input\" type=\"radio\" name=\"button\" id=\"term\"/>\n            <label className=\"radio__label\" htmlFor=\"term\">Срок</label>\n          </div>\n        </div>\n        <button className=\"form__close-btn\" data-testid=\"close\" type=\"button\" onClick={() => onButtonClick(false)}/>\n        <button className=\"form__submit-btn\" type=\"submit\" disabled={error && true}>Добавить</button>\n      </form>\n  )\n}\n\nexport default Form;\n","import React, {useState, useEffect} from \"react\";\nimport Button from \"../button/button\";\nimport Form from \"../form/form\";\n\nconst App: React.FC = () => {\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const handleButton = (isOpen: boolean):void => {\n    setIsOpen(isOpen)\n  }\n\n  useEffect(() => {\n    const onKeyDownEsc = (evt: KeyboardEvent): void => {\n         if (evt.key === `Escape`) {\n             evt.preventDefault();\n             setIsOpen(false);\n         }\n     }\n\n    document.addEventListener(`keydown`, onKeyDownEsc);\n    return () => {\n        document.removeEventListener(`keydown`, onKeyDownEsc)}\n  }, [isOpen]);\n\n  return (\n    <>\n      {\n        isOpen ? <Form onButtonClick={handleButton}/> : <Button onButtonClick={handleButton}/>\n      }\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./components/app/App\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}